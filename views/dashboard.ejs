<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dashboard | ByteCard</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="css/dashboard.css" />
    <link rel="stylesheet" href="/css/modal.css" />
  </head>
  <body>
    <header class="header">
      <a class="logo" href="/"><div>ByteCard</div></a>
      <nav class="nav">
        <a href="/search" class="nav-link">Discover</a>
        <% if (user) { %>
          <a href="/dashboard" class="nav-link">User: <%= user.name %></a>
          <a href="/logout" class="nav-link">Logout</a>
        <% } else { %>
          <a href="/login" class="nav-link">Login</a>
        <% } %>
      </nav>
    </header>

    <main class="main-container">
      <h1>Welcome, <span class="text"><%= user.name %>!</span></h1>
      <h2>Your ByteCards</h2>
      <a href="/addcard"
        ><button id="createBtn" class="btn">Create a ByteCard +</button></a
      >
      <div class="card-container">
        <% if (cards && cards.length > 0) { %>
          <% cards.forEach(function(card) { %>
            <div class="card" data-id="<%= card.cardid %>">
              <div class="card-header">
                <span class="card-name"><%= card.card_name %></span>
                <span class="card-brand">ByteCard</span>
              </div>
              <div class="card-body">
                <div class="card-position"><%= card.card_position %></div>
              </div>
              <div class="card-footer">
                <span class="company-name"><%= card.card_company %></span>
                <span class="card-industry"><%= card.tagname %></span>
              </div>
              <button class="deletecardbtn" data-id="<%= card.cardid %>">Delete Card</button>
            </div>
          <% }); %>
        <% } else { %>
          <div>
            You don't have any cards - press the + button to create one!
          </div>
        <% } %>
      </div>

      <h2>Account Settings</h2>

      <!-- Delete Account Button -->
      <button id="deleteBtn" class="btn delete-btn">Delete Account</button>
      <br>
      <br>

      <a href="/forgot-password"><button id="deleteBtn" class="btn delete-btn">Reset Password</button></a>

      <!-- Modal for Account Deletion Confirmation -->
      <div id="deleteModal" class="modal">
        <div class="modal-content">
          <h2>Are you sure you want to delete your account?</h2>
          <p>This action cannot be undone.</p>
          <input
            type="password"
            id="passwordInput"
            placeholder="Enter your password"
          />
          <div class="modal-actions">
            <button id="confirmDeleteBtn" class="btn confirm-btn">
              Confirm
            </button>
            <button id="cancelDeleteBtn" class="btn cancel-btn">Cancel</button>
          </div>
        </div>
      </div>
    </main>

    <script>
      // Get elements for delete modal
      const deleteBtn = document.getElementById("deleteBtn");
      const deleteModal = document.getElementById("deleteModal");
      const confirmDeleteBtn = document.getElementById("confirmDeleteBtn");
      const cancelDeleteBtn = document.getElementById("cancelDeleteBtn");
      const passwordInput = document.getElementById("passwordInput");

      // Show the delete modal when the delete button is clicked
      deleteBtn.addEventListener("click", () => {
        deleteModal.style.display = "flex"; // Show the modal
        deleteBtn.style.display = "none"; // Hide the delete button
      });

      // Close the delete modal when the cancel button is clicked
      cancelDeleteBtn.addEventListener("click", () => {
        deleteModal.style.display = "none"; // Hide the modal
        deleteBtn.style.display = "block"; // Show the delete button again
      });

      // Handle account deletion when confirm is clicked
      confirmDeleteBtn.addEventListener("click", async () => {
        const password = passwordInput.value;

        if (!password) {
          alert("Please enter your password.");
          return;
        }

        try {
          const response = await fetch("/delete-account", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ password: password }),
          });

          const result = await response.json();

          if (response.ok) {
            alert("Account deleted successfully.");
            window.location.href = "/login"; // Redirect to login page after deletion
          } else {
            alert(result.message || "Error deleting account.");
          }
        } catch (error) {
          console.error("Error:", error);
          alert("An error occurred. Please try again.");
        }
      });

      // Add event listeners to all delete card buttons
      document.addEventListener('DOMContentLoaded', function() {
        const deleteButtons = document.querySelectorAll('.deletecardbtn');

        deleteButtons.forEach(button => {
          button.addEventListener('click', async function() {
            const cardId = button.getAttribute("data-id");

            if (!confirm("Are you sure you want to delete this card?")) return;

            try {
              const response = await fetch("/deletecard", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({ cardId }),
              });

              const result = await response.json();

              if (response.ok) {
                // Remove the card from the DOM
                const card = this.closest('.card');
                card.remove();
              } else {
                alert('Failed to delete the card.');
              }
            } catch (error) {
              console.error('Error:', error);
              alert('An error occurred while deleting the card.');
            }
          });
        });
      });
    </script>
  </body>
</html>